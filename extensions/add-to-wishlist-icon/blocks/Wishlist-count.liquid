<div
  class="wishlist-counter"
  x-data="wishlistCounter()"
  x-init="init()"
  @wishlist-updated.window="handleUpdate($event.detail)"
>
  <button
    @click="goToWishlist()"
    class="counter-button"
    :class="{ 'has-items': count > 0 }"
    aria-label="View Wishlist"
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      width="20"
      height="20"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
    >
      <path stroke-linecap="round" stroke-linejoin="round" d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"/>
    </svg>

    <span class="count-badge" x-show="count > 0" x-text="count"></span>
  </button>

  <div
    class="wishlist-slider-overlay"
    x-show="showSlider"
    x-transition:enter="transition ease-in-out duration-400"
    x-transition:enter-start="opacity-0"
    x-transition:enter-end="opacity-100"
    x-transition:leave="transition ease-in-out duration-300"
    x-transition:leave-start="opacity-100"
    x-transition:leave-end="opacity-0"
    @click="showSlider = false"
  >
    <div
      class="wishlist-slider"
      @click.stop
      x-show="showSlider"
      x-transition:enter="transition ease-out duration-1000"
      x-transition:enter-start="opacity-0 translate-x-[-100%] scale-90 rotate-[-5deg]"
      x-transition:enter-end="opacity-100 translate-x-0 scale-100 rotate-0"
      x-transition:leave="transition ease-in duration-600"
      x-transition:leave-start="opacity-100 translate-x-0 scale-100 rotate-0"
      x-transition:leave-end="opacity-0 translate-x-[-100%] scale-95 rotate-[-5deg]"
    >
      <div class="slider-header">
        <h2>My Wishlist <span x-text="count"></span></h2>
        <button @click="showSlider = false" class="close-btn">&times;</button>
      </div>

      <div class="slider-content" x-show="wishlistItems.length > 0">
        <template x-for="item in wishlistItems" :key="item.id">
          <div class="wishlist-item">
            <button @click="removeItem(item.id, item.productId)" class="remove-cross" title="Remove item">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                width="14"
                height="14"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
              >
                <line x1="18" y1="6" x2="6" y2="18"></line>
                <line x1="6" y1="6" x2="18" y2="18"></line>
              </svg>
            </button>
            <img :src="item.productImage" :alt="item.productTitle" width="80" height="80" class="item-image">
            <div class="item-details">
              <h3 x-text="item.productTitle"></h3>
              <p class="price">Price: $<span x-text="item.price ? item.price.toFixed(2) : 'N/A'"></span></p>
              <div class="item-actions">
                <button @click="addToCart(item.productId, 1)" class="add-to-cart-btn">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                    width="16"
                    height="16"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                  >
                    <circle cx="9" cy="21" r="1"/>
                    <circle cx="20" cy="21" r="1"/>
                    <path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"/>
                  </svg>
                  Add to Cart
                </button>
              </div>
            </div>
          </div>
        </template>
      </div>

      <div class="empty-state" x-show="wishlistItems.length === 0">
        <div style="display: flex; flex-direction: column; align-items: center; gap: 1rem; padding: 2rem;">
          <svg width="64" height="64" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" style="color: #ccc;">
            <path d="M9 5H7a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2M9 5a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2M9 5a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2m-3 7h.01" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M21 12.5a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" fill="currentColor"/>
          </svg>
          <h3 style="margin: 0; font-size: 1.2rem; color: #333;">Your wishlist is empty</h3>
          <p style="margin: 0; color: #666; text-align: center;">Add more items to this wishlist and see them here.</p>
          <a href="/collections/all" style="color: #007bff; text-decoration: none; font-weight: 500; padding: 0.5rem 1rem; border: 1px solid #007bff; border-radius: 4px;">Browse products →</a>
        </div>
      </div>
    </div>
  </div>
</div>

<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>

<script>
  document.addEventListener('alpine:init', () => {
    Alpine.data('wishlistCounter', () => ({
      apiUrl: 'https://wishlist-remix-app-yxat.onrender.com',
      customerId: '{{ customer.id }}',
      shop: '{{ shop.permanent_domain }}',
      count: 0,
      wishlistItems: [],
      showSlider: false,
      isLoading: true,

      async init() {
        if (this.customerId && this.shop) {
          await this.fetchCount();
        } else {
          this.count = 0;
          this.isLoading = false;
        }
      },

      async fetchCount() {
        try {
          const response = await fetch(`${this.apiUrl}/api/wishlist?customerId=${this.customerId}&shop=${this.shop}`);
          const data = await response.json();
          this.count = data.wishlists ? data.wishlists.length : 0;
          this.wishlistItems = data.wishlists || [];
        } catch (error) {
          console.error('Error fetching wishlist:', error);
          this.count = 0;
          this.wishlistItems = [];
        } finally {
          this.isLoading = false;
        }
      },

      async fetchFullWishlist() {
        if (!this.customerId || !this.shop) return;
        await this.fetchCount();
      },

      handleUpdate(detail) {
        if (detail.action === 'add') {
          this.count++;
        } else if (detail.action === 'remove') {
          this.count--;
        }
        this.fetchFullWishlist();
      },

      goToWishlist() {
        this.showSlider = true;
        this.fetchFullWishlist();
      },

      async removeItem(id, productId) {
        try {
          const formData = new FormData();
          formData.append('customerId', this.customerId);
          formData.append('productId', productId);
          formData.append('shop', this.shop);
          formData.append('_action', 'DELETE');

          const response = await fetch(`${this.apiUrl}/api/wishlist`, {
            method: 'POST',
            body: formData,
          });
          const data = await response.json();
          if (data.ok) {
            this.fetchFullWishlist();
            window.dispatchEvent(new CustomEvent('wishlist-updated', { detail: { action: 'remove' } }));
          }
        } catch (error) {
          console.error('Error removing item:', error);
        }
      },

      async addToCart(productId, quantity) {
        try {
          const response = await fetch('/cart/add.js', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
              id: productId,
              quantity: quantity,
            }),
          });
          if (response.ok) {
            console.log('Added to cart successfully');
          } else {
            console.error('Error adding to cart:', await response.text());
          }
        } catch (error) {
          console.error('Error adding to cart:', error);
        }
      },
    }));
  });
</script>

<style>
  .wishlist-counter {
    position: fixed;
    bottom: 20px;
    right: 20px;
    z-index: 1000;
  }

  .counter-button {
    position: relative;
    width: 50px;
    height: 50px;
    background-color: #000;
    border: none;
    border-radius: 50%;
    color: #fff;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .counter-button:hover {
    transform: scale(1.05);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.25);
  }

  .counter-button.has-items {
    background-color: #dc3545;
  }

  .counter-button svg {
    width: 20px;
    height: 20px;
    stroke: #fff;
  }

  .count-badge {
    position: absolute;
    top: -5px;
    right: -5px;
    background-color: #fff;
    color: #000;
    border-radius: 50%;
    min-width: 18px;
    height: 18px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    font-weight: bold;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  }

  /* Slider Styles */
  .wishlist-slider-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 9999;
    backdrop-filter: blur(4px);
  }

  .wishlist-slider {
    position: fixed;
    top: 0;
    right: 0;
    width: 420px;
    height: 100vh;
    background-color: #fff;
    box-shadow: -4px 0 20px rgba(0, 0, 0, 0.15);
    display: flex;
    flex-direction: column;
    z-index: 10000;
    border-left: 1px solid #e9ecef;
  }

  .slider-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 24px 20px;
    border-bottom: 1px solid #e9ecef;
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    position: sticky;
    top: 0;
    z-index: 10;
  }

  .slider-header h2 {
    margin: 0;
    font-size: 20px;
    font-weight: 600;
    color: #333;
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .slider-header h2::before {
    content: '❤️';
    font-size: 18px;
  }

  .close-btn {
    background: none;
    border: none;
    font-size: 28px;
    cursor: pointer;
    color: #666;
    padding: 4px;
    border-radius: 50%;
    transition: background-color 0.2s ease;
  }

  .close-btn:hover {
    background-color: #f8f9fa;
    color: #333;
  }

  .slider-content {
    flex: 1;
    overflow-y: auto;
    padding: 24px 20px;
    background-color: #fafbfc;
  }

  .wishlist-item {
    position: relative;
    display: flex;
    background: #fff;
    border-radius: 12px;
    padding: 16px;
    margin-bottom: 16px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
    transition: box-shadow 0.2s ease, transform 0.2s ease;
  }

  .wishlist-item:hover {
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.12);
    transform: translateY(-1px);
  }

  .item-image {
    width: 80px;
    height: 80px;
    object-fit: cover;
    margin-right: 16px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .item-details {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .item-details h3 {
    margin: 0 0 8px 0;
    font-size: 14px;
    font-weight: 500;
    color: #333;
    line-height: 1.3;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    display: block;
  }

  .price {
    margin: 0 0 12px 0;
    color: #28a745;
    font-size: 14px;
    font-weight: 600;
  }

  .item-actions {
    display: flex;
    gap: 8px;
    margin-top: 12px;
    width: 100%;
  }

  .add-to-cart-btn {
    flex: 1;
    height: 44px;
    padding: 10px 12px;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 12px;
    font-weight: 500;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 6px;
    transition: background-color 0.2s ease, transform 0.1s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    width: 100%;
    white-space: nowrap;
    background-color: #007bff;
    color: white;
  }

  .add-to-cart-btn:hover {
    background-color: #0056b3;
    transform: translateY(-1px);
  }

  .add-to-cart-btn svg{
    width: 16px;
    height: 16px;
    stroke: currentColor;
  }

  .remove-cross {
    position: absolute;
    top: 8px;
    right: 8px;
    background: rgba(220, 53, 69, 0.8);
    color: white;
    border: none;
    border-radius: 50%;
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    opacity: 0;
    transition: opacity 0.2s ease, background-color 0.2s ease;
    z-index: 1;
  }

  .wishlist-item:hover .remove-cross {
    opacity: 1;
  }

  .remove-cross:hover {
    background: rgba(220, 53, 69, 1);
  }

  .remove-cross svg {
    stroke: white;
  }

  .empty-state,
  .login-prompt {
    text-align: center;
    padding: 60px 20px;
    color: #666;
    background: #fff;
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
  }

  .empty-state p,
  .login-prompt p {
    font-size: 16px;
    margin-bottom: 16px;
  }

  .login-prompt a {
    color: #007bff;
    text-decoration: none;
    font-weight: 500;
    padding: 8px 16px;
    border: 1px solid #007bff;
    border-radius: 6px;
    transition: background-color 0.2s ease;
  }

  .login-prompt a:hover {
    background-color: #007bff;
    color: white;
  }

  /* Mobile Responsiveness */
  @media (max-width: 480px) {
    .wishlist-slider {
      width: 100%;
    }

    .wishlist-item {
      flex-direction: column;
      text-align: center;
    }

    .item-image {
      margin: 0 0 12px 0;
      align-self: center;
    }

    .item-actions {
      flex-direction: column;
      width: 100%;
    }

    .add-to-cart-btn {
      width: 100%;
      height: 44px;
      font-size: 14px;
    }
  }
</style>

{% schema %}
{
  "name": "Wishlist Counter",
  "target": "body",
  "settings": [
    {
      "type": "text",
      "id": "wishlist_url",
      "label": "Wishlist Page URL",
      "default": "/apps/wishlist",
      "info": "URL to redirect to on click (default: /apps/wishlist)"
    }
  ]
}
{% endschema %}
